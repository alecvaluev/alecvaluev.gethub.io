import{_ as a,r as e,o as t,c as i,b as n,d as o,f as c,e as l}from"./app.03cd1c1d.js";const p={},d=c(`<h1 id="dictionary" tabindex="-1"><a class="header-anchor" href="#dictionary" aria-hidden="true">#</a> Dictionary</h1><blockquote><p>store data values in key:value pairs</p></blockquote><ul><li>3.7 &gt; ordered (the items have a defined order, and that order will not change.)</li><li>changeable</li><li>does not allow duplicates</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>thisdict <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;brand&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Ford&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;model&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mustang&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;year&quot;</span><span class="token punctuation">:</span> <span class="token number">1964</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>thisdict<span class="token punctuation">[</span><span class="token string">&quot;brand&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="len" tabindex="-1"><a class="header-anchor" href="#len" aria-hidden="true">#</a> len()</h2><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type()</h2><blockquote><p>&lt; class &#39;dict&#39;&gt;</p></blockquote><h2 id="access" tabindex="-1"><a class="header-anchor" href="#access" aria-hidden="true">#</a> Access</h2><ol><li>[]</li><li>get()</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x <span class="token operator">=</span> thisdict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;model&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>keys() - return a list of all the keys</li></ol><div class="custom-container warning"><p class="custom-container-title">Note</p><p>The list of the keys is a view of the dictionary, meaning that any changes done to the dictionary will be reflected in the keys list.</p></div><p>4.values()</p><div class="custom-container warning"><p class="custom-container-title">Note</p><p>The list of the values is a view of the dictionary, meaning that any changes done to the dictionary will be reflected in the values list.</p></div><p>5.items() - return each item in a dictionary, as tuples in a list.</p><div class="custom-container warning"><p class="custom-container-title">Note</p><p>The returned list is a view of the items</p></div><h3 id="exist" tabindex="-1"><a class="header-anchor" href="#exist" aria-hidden="true">#</a> exist</h3><blockquote><p>if in</p></blockquote><h2 id="change-item" tabindex="-1"><a class="header-anchor" href="#change-item" aria-hidden="true">#</a> Change Item</h2><ol><li>thisdict[&quot;year&quot;] = 2018</li><li>thisdict.update({&quot;year&quot;: 2020})</li></ol><h2 id="add-item" tabindex="-1"><a class="header-anchor" href="#add-item" aria-hidden="true">#</a> Add Item</h2><ol><li>[]</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>thisdict <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;brand&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Ford&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;model&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mustang&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;year&quot;</span><span class="token punctuation">:</span> <span class="token number">1964</span>
<span class="token punctuation">}</span>
thisdict<span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>update() - if the item does not exist, the item will be added.</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>thisdict<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="remove-items" tabindex="-1"><a class="header-anchor" href="#remove-items" aria-hidden="true">#</a> Remove Items</h2><p>1.pop(&quot;key&quot;) 2.popitem() - remove the last inserted item( bef. 3.7 a random item removed) 3.del thisdict[&quot;model&quot;]</p><div class="custom-container danger"><p class="custom-container-title">Note</p><p>can also delete the dictionary completely</p><p><code>del thisdict</code></p></div><p>4.clear() - empties the dict</p><h2 id="loop" tabindex="-1"><a class="header-anchor" href="#loop" aria-hidden="true">#</a> Loop</h2><blockquote><p>for in</p></blockquote><ol><li>for x in thisdict: - all key names</li><li>for x in thisdict.values(): - all values</li><li>for x in thisdict.keys(): - through all keys</li><li>for x, y in thisdict.items() - keys and values</li></ol><h2 id="copy-a-dict" tabindex="-1"><a class="header-anchor" href="#copy-a-dict" aria-hidden="true">#</a> Copy a Dict</h2><blockquote><p>cannot dict2 = dict1 =&gt; it will reference</p></blockquote><ol><li>copy()</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>mydict <span class="token operator">=</span> thisdict<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.dict()</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>mydict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>thisdict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="nested-dicts" tabindex="-1"><a class="header-anchor" href="#nested-dicts" aria-hidden="true">#</a> Nested Dicts</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>child1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;Emil&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;year&quot;</span> <span class="token punctuation">:</span> <span class="token number">2004</span>
<span class="token punctuation">}</span>
child2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;Tobias&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;year&quot;</span> <span class="token punctuation">:</span> <span class="token number">2007</span>
<span class="token punctuation">}</span>
child3 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;Linus&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;year&quot;</span> <span class="token punctuation">:</span> <span class="token number">2011</span>
<span class="token punctuation">}</span>

myfamily <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;child1&quot;</span> <span class="token punctuation">:</span> child1<span class="token punctuation">,</span>
  <span class="token string">&quot;child2&quot;</span> <span class="token punctuation">:</span> child2<span class="token punctuation">,</span>
  <span class="token string">&quot;child3&quot;</span> <span class="token punctuation">:</span> child3
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2>`,41),u={href:"https://www.w3schools.com/python/python_dictionaries_methods.asp",target:"_blank",rel:"noopener noreferrer"},r=l("Dict Methods");function h(k,v){const s=e("ExternalLinkIcon");return t(),i("div",null,[d,n("p",null,[n("a",u,[r,o(s)])])])}const b=a(p,[["render",h],["__file","Dicrt.html.vue"]]);export{b as default};
