import{_ as n,o as s,c as a,f as e}from"./app.d4c5faad.js";const t={},i=e(`<h1 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h1><blockquote><p>Python is an object oriented programming language.</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span><span class="token punctuation">:</span>
  x <span class="token operator">=</span> <span class="token number">5</span>

  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
    self<span class="token punctuation">.</span>age <span class="token operator">=</span> age

  <span class="token keyword">def</span> <span class="token function">myfunc</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello my name is &quot;</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>

p1 <span class="token operator">=</span> MyClass<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p>The self parameter is a reference to the current instance of the class, and is used to access variables that belong to the class.</p><p>It does not have to be named self , you can call it whatever you like, but it has to be the first parameter of any function in the class:</p></div><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> <strong>init</strong>()</h2><blockquote><p>executed when the class is being initiated</p></blockquote><h2 id="str" tabindex="-1"><a class="header-anchor" href="#str" aria-hidden="true">#</a> <strong>str</strong>()</h2><blockquote><p>controls what should be returned when the class object is represented as a string</p></blockquote><h2 id="modify-props" tabindex="-1"><a class="header-anchor" href="#modify-props" aria-hidden="true">#</a> Modify Props</h2><p>You can modify properties on objects like this:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>p1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">40</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="delete-prop" tabindex="-1"><a class="header-anchor" href="#delete-prop" aria-hidden="true">#</a> Delete prop</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">del</span> p1<span class="token punctuation">.</span>age
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="delete-object" tabindex="-1"><a class="header-anchor" href="#delete-object" aria-hidden="true">#</a> Delete Object</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">del</span> p1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="pass-statement" tabindex="-1"><a class="header-anchor" href="#pass-statement" aria-hidden="true">#</a> pass Statement</h2><h2 id="inheritance" tabindex="-1"><a class="header-anchor" href="#inheritance" aria-hidden="true">#</a> Inheritance</h2><p>Parent class is the class being inherited from, also called base class.</p><p>Child class is the class that inherits from another class, also called derived class</p><h2 id="create-child" tabindex="-1"><a class="header-anchor" href="#create-child" aria-hidden="true">#</a> Create Child</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fname<span class="token punctuation">,</span> lname<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>fname<span class="token punctuation">,</span> lname<span class="token punctuation">)</span>  <span class="token comment"># or use can call directly Person.__init__(self, fname, lname)</span>
    self<span class="token punctuation">.</span>graduationyear <span class="token operator">=</span> <span class="token number">2019</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[i];function p(c,l){return s(),a("div",null,o)}const d=n(t,[["render",p],["__file","Class.html.vue"]]);export{d as default};
