const e=JSON.parse('{"key":"v-3cc00134","path":"/cs/OOP/design_principles.html","title":"OOP Design Principles","lang":"en-US","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"DRY (Don\u2019t repeat yourself)","slug":"dry-don-t-repeat-yourself","link":"#dry-don-t-repeat-yourself","children":[]},{"level":2,"title":"Encapsulate What Changes","slug":"encapsulate-what-changes","link":"#encapsulate-what-changes","children":[]},{"level":2,"title":"Single Responsibility Principle (SRP)","slug":"single-responsibility-principle-srp","link":"#single-responsibility-principle-srp","children":[]},{"level":2,"title":"Open Closed design principle (OCP)","slug":"open-closed-design-principle-ocp","link":"#open-closed-design-principle-ocp","children":[]},{"level":2,"title":"Liskov Substitution Principle (LSP)","slug":"liskov-substitution-principle-lsp","link":"#liskov-substitution-principle-lsp","children":[]},{"level":2,"title":"Interface Segregation Principle (ISP)","slug":"interface-segregation-principle-isp","link":"#interface-segregation-principle-isp","children":[]},{"level":2,"title":"Dependency Inversion Principle (DIP)","slug":"dependency-inversion-principle-dip","link":"#dependency-inversion-principle-dip","children":[]},{"level":2,"title":"Favor Composition over Inheritance","slug":"favor-composition-over-inheritance","link":"#favor-composition-over-inheritance","children":[]},{"level":2,"title":"Programmning for Interface","slug":"programmning-for-interface","link":"#programmning-for-interface","children":[]},{"level":2,"title":"Delegation principle","slug":"delegation-principle","link":"#delegation-principle","children":[]}],"git":{"updatedTime":1663390145000},"filePathRelative":"cs/OOP/design_principles.md"}');export{e as data};
